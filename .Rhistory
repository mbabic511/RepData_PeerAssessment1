x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x
x <- list(2, "a", "b", TRUE)
x
x[[1]]
x <- 1:4
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 1
x
clear
clear()
read.csv("hw1_data")
read.csv("hw1_data.csv")
setwd("~/")
setwd("C:/Users/mbabic/Downloads")
read.csv("hw1_data.csv")
d <- read.csv("hw1_data.csv")
d.names
d.names()
d.classes()
d["class"]
d["classes"]
d
d[1]
d["name"]
d["factor"]
d["factors"]
colnames(d)
d[1:2]
d[, 2]
d[, 1:2]
d[1:2, ]
d[152:153, ]
tail(d, 2)
d[47, "Ozone"]
x <- d[, "Ozone"][is.na()]
x <- is.na(d[, "Ozone"])
y <- x[x == TRUE]
y.length
y.length()
length
length(y)
length(is.na(d[, "Ozone"]) == TRUE)
length(z <- is.na(d[, "Ozone"]) == TRUE)
z
z <- z[ z == TRUE ]
z
length(z <- is.na(d[, "Ozone"])[z == TRUE])
z <- is.na(d[ , "Ozone"])
x <- d[, "Ozone"][z]
x
x <- d[, "Ozone"][!z]
x
mean(x)
mean(d[, "Ozone"])
x <- d[c("Ozone" > 31, "Temp" > 90)]
x
x <- d["Ozone" > 31, "Temp" > 90]
x <- d["Ozone" > 31]
x <- d[d["Ozone" > 31]
x <- d[d["Temp" > 90]
x <- d[d["Ozone" > 31]]
x <- d["Ozone" > 31]
y <- d[["Ozone"]][ o > 31]
y <- d[["Ozone"]]
z <- y > 31
x <- d[z]
x <- d[z, ]
y <- d[["Temp"]]
z <- y > 90
x <- d[z, ]
mean(d[, "Solar.R"])
mean(x[, "Solar.R"])
x <- d[c("Ozone" > 31, "Temp" > 90)]
x
x <- d["Ozone" > 31 and "Temp" > 90]
x <- d["Ozone" > 31 && "Temp" > 90]
x <- d["Ozone" > 31 & "Temp" > 90]
x
x <- d["Ozone" > 31 * "Temp" > 90]
x <- d["Ozone" > 31 && "Temp" > 90]
x
x <- d[["Ozone" > 31 and "Temp" > 90]]
x <- d[["Ozone" > 31 && "Temp" > 90]]
y <- d[["Ozone"]]
z <- d[["Temp"]]
j <- y[y > 31] * z[z > 90]
j <- y[y > 31] && z[z > 90]
j
j <- y[y > 31] & z[z > 90]
j
y[y>31]
y
y > 31
j <- y>31 & z>90
j
x <- d[j]
x <- d[j,]
x
mean(x[, "Solar.R"])
i <- x[!is.na("Solar.R"),]
i
y <- is.na(x[,"Solar"])
y <- is.na(x[,"Solar.R"])
y
i <- x[!y,]
i
mean(i, "Solar.R")
mean(i[, "Solar.R"])
x <- d["Month" == 6,]
x <- d[d[,"Month" == 6],]
x <- d[["Month" == 6],]
x <- d[d["Month" == 6],]
y <- d[, "Month" == 6]
y
y <- d["Month" == 6, 0]
y
y <- d["Month" == 6, ]
y
y <- d[, "Month"] == 6
y
x <- d[y,]
mean(x[, "Temp"])
y <- d[, "Month"] == 5
max(x[, "Ozone"])
x <- d[y,]
max(x[, "Ozone"])
x
max(x[!is.na(x["Ozone", ])][, "Ozone"])
max(x[!is.na(x["Ozone", ]),][, "Ozone"])
x[!is.na(x["Ozone", ]),]
x[!is.na(x[, "Ozone"]),]
max(x[!is.na(x[, "Ozone" ]),][, "Ozone"])
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,], "Solar.R")
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,], ], "Solar.R")
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & is.na(d[, "Solar.R"]), ], "Solar.R")
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & !is.na(d[, "Solar.R"]), ], "Solar.R")
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & !is.na(d[, "Solar.R"]), "Solar.R")
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & !is.na(d[, "Solar.R"]), "Solar.R"])
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & !is.na(d[, "Solar.R"]), ], "Solar.R"])
mean(d[ d["Temp" > 90,] & d["Ozone" > 31,] & !is.na(d[, "Solar.R"]), ]["Solar.R"])
d["Temp" > 90, ]
d[,"Temp" > 90]
d["Temp" > 90]
d[["Temp" > 90, ]]
d[["Temp" > 90]]
d["Temp" > 90]
d[c("Temp" > 90)]
d[c("Temp" > 90)][1]
d[c("Temp" > 90), "Temp"]
d["Temp" > 90, "Temp"]
d[, "Temp"]["Temp" > 90]
d[, "Temp"][c("Temp" > 90)]
d[, "Temp"][d[["Temp"]] > 90]
d[d[["Temp"]] > 90), "Temp"]
d[d[["Temp"]] > 90, "Temp"]
d[, "Temp"][d[["Temp"]] > 90]
d[, "Temp"][c(d[["Temp"]] > 90)]
d[, "Temp"][c(d["Temp"] > 90)]
d[c(d["Temp"] > 90)]
d[c(d["Temp"] > 90),]
d[,"Temp"] > 90
mean(d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31 & !is.na(d[, "Solar.R"]), ]["Solar.R"])
mean(d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31 & !is.na(d[, "Solar.R"]), "Solar.R"])
d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31 & !is.na(d[, "Solar.R"]), "Solar.R"]
d
nrow(d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31 & !is.na(d[, "Solar.R"]), "Solar.R"])
d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31 & !is.na(d[, "Solar.R"]), ]
d[ d[,"Temp"] > 90 && d[, "Ozone"] > 31 && !is.na(d[, "Solar.R"]), ]
d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31, ]
d[ (d[,"Temp"] > 90) & (d[, "Ozone"] > 31), ]
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ]d[ d[,"Temp"] > 90 & d[, "Ozone"] > 31, ]
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ][ d[,"Temp"] > 90 & d[, "Ozone"] > 31, ]
d[, "Temp"]
d[, "Ozone"]
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ]
d
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ][ [,"Temp"] > 90 & [, "Ozone"] > 31, ]
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ]["Temp" > 90 &  "Ozone" > 31]
d[complete.cases(d[, "Temp"], d[, "Ozone"]), ]["Temp" > 90 &  "Ozone" > 31, "Solar.R"]
x
i
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
df <- read.csv(file)
setInternet2(TRUE)
df <- read.csv(file)
df <- read.csv(file, setInternet2 = "TRUE")
download.file(file, "data.csv")
df <- read.csv("data.csv")
df.names()
names(df)
df$VAL == 24
df[df$VAL == 24]
df[df$VAL == 24,]
nrow(df$VAL == 24)
nrow(df[df$VAL == 24,])
nrow(df[],])
nrow(df[,])
nrow(df[df$VAL == 24])
nrow(subset(df, VAL == 24))
library(xslx)
file2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(file, "data.xlsx")
library(xlsx)
library(xslx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
library(rJava)
?seq
seq(0, 1, length = 4)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(nlme)
weight
Time
Diet
xyplot(weight ~ Time | Diet, BodyWeight)
data
d <- data
d <- data()
d
d <- data(BodyWeight)
d
d <- data("BodyWeight")
d
d <- getData("BodyWeight")
d <- data(BodyWeight)
str(BodyWeight)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
source('~/.active-rstudio-document')
plot2()
setwd("C:\\Jezici\\Projects\\courseraExploratoryAnalysis\\")
setwd("C:/Jezici/Projects/courseraExploratoryDataAnalysis/CourseProject1")
plot2()
setwd("C:/Jezici/Projects/courseraReproducibleResearch")
setwd("C:/Jezici/Projects/courseraReproducibleResearch/RepData_PeerAssessment1")
?read.csv
data <- cbind(dateTime, data)
names(data)[1] <- "datetime"
file <- "activity.csv"
csv <- read.csv(file, stringsAsFactors = FALSE)
dateTime <- paste(csv$date, formatC(csv$interval, width=4, flag="0"))
dateTime
grouped <- group_by(csv, date)
library(dplyr)
grouped <- group_by(csv, date)
head grouped
head (grouped)
summary <- summarise(grouped, MeanPerDay = mean(steps, na.rm = TRUE), MedianPerDay = median(steps, na.rm = TRUE))
head(summary)
head(summary, 15)
summary
head(summary, 25)
groupedByIntervals <- group_by(csv, interval)
summaryByIntervals <- summarise(groupedByIntervals, AvgOfStepsPerInterval = mean(steps, na.rm = TRUE))
plot(summaryByIntervals$interval, summaryByIntervals$AvgOfStepsPerInterval, type="l", col="lightblue")
plot(summaryByIntervals$interval, summaryByIntervals$AvgOfStepsPerInterval, type="l", col="lightblue", xlab="Interval", ylab="Average no. of steps")
summaryByInterval[summaryByInterval$AvgOfStepsPerInterval == max(summaryByInterval$AvgOfStepsPerInterval), ]["interval"]
summaryByIntervals[summaryByIntervals$AvgOfStepsPerInterval == max(summaryByIntervals$AvgOfStepsPerInterval), ]["interval"]
csv2 <- csv
csv2[is.na(steps), ]$steps = summaryByIntervals[summaryByIntervals$interval == csv2$interval]
for(r in rows(csv2)) { if (is.na(csv2[r,]$steps)) { csv2[r,]$steps = summaryByIntervals[summaryByIntervals$interval == csv2[r, ]$interval]$AvgOfStepsPerInterval }}
for(r in csv2.rows()) { if (is.na(csv2[r,]$steps)) { csv2[r,]$steps = summaryByIntervals[summaryByIntervals$interval == csv2[r, ]$interval]$AvgOfStepsPerInterval }}
for(r in 1:nrow(csv2)) { if (is.na(csv2[r,]$steps)) { csv2[r,]$steps = summaryByIntervals[summaryByIntervals$interval == csv2[r, ]$interval]$AvgOfStepsPerInterval }}
for(r in 1:nrow(csv2)) { if (is.na(csv2[r,]$steps)) { csv2[r,]$steps = summaryByIntervals[summaryByIntervals$interval == csv2[r, ]$interval, ]$AvgOfStepsPerInterval }}
csv2
head(csv2)
head(csv2)
head(csv)
head(csv2)
head(summaryByIntervals)
csv2
head(csv)
dateTime <- paste(csv$date, formatC(csv$interval, width=4, flag="0"))
dateTime <- strptime(dateTime, "%Y-%m-%d %H%M")
csv <- cbind(dateTime, csv)
names(csv)[1] <- "dateTime"
head(csv)
weekday(csv$dateTime)
weekdays(csv$dateTime)
csv$dateTime$wday
wday(csv$dateTime)
as.POSIXlt(csv$dateTime)$wday
wd <- as.POSIXlt(csv$dateTime)$wday
factWd <- (wd > 0 & wd < 6) ? "weekday" : "weekend"
factWd
factWd <- ((wd > 0 & wd < 6) ? "weekday" : "weekend")
factWd <- ((wd > 0 && wd < 6) ? "weekday" : "weekend")
factWd <- as.factor((wd > 0 && wd < 6) ? "weekday" : "weekend")
factWd <- factor((wd > 0 & wd < 6) ? "weekday" : "weekend")
factWd <- factor((wd > 0 & wd < 6) ? 1 : 0)
factWd <- if (wd > 0 & wd < 6) { "weekday" } else { "weekend" }
factWd <- if (wd > 0 && wd < 6) { "weekday" } else { "weekend" }
factWd
factWd <- if (wd > 0 && wd < 6) { "weekday" } else { "weekend" }
factWd <- if (wd > 0 & wd < 6) { "weekday" } else { "weekend" }
factWd <- (wd > 0 & wd < 6)
factWd <- factor(factWd, levels=C("weekday", "weekend"))
factWd <- as.numeric((wd > 0 & wd < 6))
factWd <- factor(factWd, levels=C("weekday", "weekend"))
factWd <- factor(factWd, labels=C("weekday", "weekend"))
factWd
factWd <- factor(factWd)
str(factWd)
levels(factWd) <- c("weekend", "weekday")
str(factWd)
factWd
